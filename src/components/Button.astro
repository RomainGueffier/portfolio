---
import { twMerge } from 'tailwind-merge'

type Variant = 'default' | 'rounded' | 'outline'
type VariantStyles = {
  [k in Variant]: string
}

type ColorScheme = 'default' | 'light' | 'dark' | 'primary'
type ColorSchemeStyles = {
  [k in ColorScheme]: string
}

export interface Props {
  id?: string
  ariaLabel?: string
  variant?: Variant
  colorScheme?: ColorScheme
  override?: string
  type?: 'submit' | 'button'
}

const {
  ariaLabel,
  variant = 'default',
  colorScheme = 'default',
  override = '',
  id,
  type = 'button',
  ...rest
} = Astro.props as Props

const btnVariants: VariantStyles = {
  default: 'w-fit h-fit p-1 rounded-full',
  rounded: 'py-2 px-4 rounded-full shadow focus:shadow-lg',
  outline:
    'w-fit h-fit p-1 rounded-full shadow border border-slate-50 transparent focus:shadow-lg',
}

const btnColorScheme: ColorSchemeStyles = {
  default: 'transparent',
  light: 'text-slate-900 bg-white hover:bg-slate-50',
  dark: 'text-slate-100 bg-slate-800 hover:bg-slate-900',
  primary: 'text-sky-100 bg-sky-600 hover:bg-sky-800',
}

const classDeclarations = twMerge(
  'text-center transition-transform duration-300 [transition-timing-function:cubic-bezier(0.34,1.56,0.64,1)] focus-within:scale-105 hover:scale-105',
  btnVariants?.[variant],
  btnColorScheme?.[colorScheme],
  override,
)
---

<button
  id={id}
  class={classDeclarations}
  aria-label={ariaLabel}
  type={type}
  {...rest}
>
  <slot />
</button>
